//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Controller/BattleControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @BattleControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @BattleControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""BattleControls"",
    ""maps"": [
        {
            ""name"": ""Menu"",
            ""id"": ""fae730dc-173c-44e0-822f-f6f21e1d1cec"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Value"",
                    ""id"": ""f307c4fa-7803-491d-8efe-5e43fc958fc6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""0ae4e95d-2f14-4428-a424-3878f2a1e5fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""0ebb7f2e-f25c-4797-bbbf-73caeba3d80e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapHero"",
                    ""type"": ""Button"",
                    ""id"": ""71a27210-ac38-4d69-af86-6b33d16b4cec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""ArrowKeys"",
                    ""id"": ""1fa10796-6b7a-457b-8128-f92dea5c75bc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""50bb199f-14aa-4ed8-8bf1-07300016629a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""99a5ad73-c1c5-4f08-96cd-c5abfbadb163"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6f9f5bf4-4a27-4d56-a8a1-0c5a6491aa2c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""809c006a-af0b-41c2-bdc2-99889e70ada1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""b8422746-b437-4960-9384-8359c154509a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""36d510f0-6050-416f-8380-1c1405bdc841"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fab46d83-ad95-4318-95e6-80f2dcd58a1b"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""17f5467f-cef2-46a4-890d-acf10626e5f6"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""985d41b3-ee9c-45b8-9b0e-977d31ddfb71"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""a29dbebf-7b80-438e-8447-3f18e351db55"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9f0e08fc-b0a6-484e-a1ad-ac1c52700bb8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b8cef926-1209-43c1-8d27-aebb47ac1b52"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""058b8c37-f72e-4cff-a082-056dfa6494a2"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""570a8856-cd37-404e-bbe6-64ef670b6288"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""73486925-ca40-48b0-8e51-69adb199d3c5"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2749e71e-0289-45f0-b0f8-47c69062bcfb"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d35b3178-c71a-4987-993c-3e58a5d9b863"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""067308d8-61c9-4522-8863-7029805251e6"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5cf2857f-be30-4b6d-8bfa-41bd0e660384"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SwapHero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffeed374-1034-4934-a6f2-af6e506607a5"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""SwapHero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Minigame"",
            ""id"": ""2a47a824-dde1-4f87-8d12-a7b85ebed10d"",
            ""actions"": [
                {
                    ""name"": ""MinigameDirectionalUp"",
                    ""type"": ""Button"",
                    ""id"": ""72daf899-78e7-4554-8c18-2e3db16e191e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinigameDirectionalDown"",
                    ""type"": ""Button"",
                    ""id"": ""0736f02e-f66a-4598-936f-2af6e2833fe4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinigameDirectionalLeft"",
                    ""type"": ""Button"",
                    ""id"": ""7a29ee28-c0e2-4615-b869-80e60ccfe48f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinigameDirectionalRight"",
                    ""type"": ""Button"",
                    ""id"": ""58aea0c3-f885-423d-841b-dd69d1ba7222"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinigameButtonA"",
                    ""type"": ""Button"",
                    ""id"": ""6a68c8f2-0574-414e-9ee6-d4ccdd7ce400"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinigameButtonB"",
                    ""type"": ""Button"",
                    ""id"": ""f5f6f44b-5e55-4451-aa33-6747bf65a9f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinigameButtonX"",
                    ""type"": ""Button"",
                    ""id"": ""9e4c595f-ed7c-41ee-8059-134189a3bf66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinigameButtonY"",
                    ""type"": ""Button"",
                    ""id"": ""6e191321-d02c-43eb-b085-5510c23b4e14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3547fc47-d607-432d-bc26-8b1297ed1640"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinigameButtonX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e80d6db3-0ca3-4ea4-be6a-a3581724ef14"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameButtonX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d0247b0-275f-487c-89a7-4be05f0e2c39"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinigameButtonY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a005579-397f-497d-bfbe-238f7d217396"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameButtonY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""289667ae-d22e-44c7-ad90-4aceb4df2962"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinigameButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7986d9db-1a0c-4c84-bec9-b7d494a9f5e5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e2fb543-bc76-448f-b0c7-e59bb0546e09"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinigameButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afaf1bda-2762-4692-81b5-83cd9697dd76"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""292e8ad7-4560-44fc-9e13-79444be9e7de"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinigameDirectionalUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61bc324a-1a30-4e36-a0e3-e526754c3e09"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameDirectionalUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0f28621-608f-4e0a-aaf4-29275ea50ca3"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameDirectionalUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""353ae392-211b-4854-9532-6485f3e1984d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinigameDirectionalDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8b32303-7ce9-4ff4-b4ab-acfbdfb4df45"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameDirectionalDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7673270-62ba-4b00-b458-99ab39aab4b2"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameDirectionalDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fef1ed9-4151-4a23-a5c3-aae8c0c5871a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinigameDirectionalLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60b08956-6e2e-4a0d-91b7-03aa9f6e5af3"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameDirectionalLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ed41dc5-9977-4375-8793-63ee23c2eee2"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameDirectionalLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""113476c5-18a0-41b8-9317-d2aeaaab2a72"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinigameDirectionalRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bd488c5-078a-4b72-a1e1-9e563ec11d8a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameDirectionalRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e426a857-d1b8-4f55-a137-462271a459cb"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""MinigameDirectionalRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Enemy"",
            ""id"": ""fa5fc9d2-ba75-415d-b818-051c12ecef01"",
            ""actions"": [
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""7e42a374-9243-474d-bcb4-f705c7f50a56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""156105f9-cba0-4407-9a24-1600269dacd9"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c7dfc99-bbe0-4fae-aa22-cdd18a7919b7"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Xbox"",
            ""bindingGroup"": ""Xbox"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Playstation"",
            ""bindingGroup"": ""Playstation"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Navigate = m_Menu.FindAction("Navigate", throwIfNotFound: true);
        m_Menu_Confirm = m_Menu.FindAction("Confirm", throwIfNotFound: true);
        m_Menu_Cancel = m_Menu.FindAction("Cancel", throwIfNotFound: true);
        m_Menu_SwapHero = m_Menu.FindAction("SwapHero", throwIfNotFound: true);
        // Minigame
        m_Minigame = asset.FindActionMap("Minigame", throwIfNotFound: true);
        m_Minigame_MinigameDirectionalUp = m_Minigame.FindAction("MinigameDirectionalUp", throwIfNotFound: true);
        m_Minigame_MinigameDirectionalDown = m_Minigame.FindAction("MinigameDirectionalDown", throwIfNotFound: true);
        m_Minigame_MinigameDirectionalLeft = m_Minigame.FindAction("MinigameDirectionalLeft", throwIfNotFound: true);
        m_Minigame_MinigameDirectionalRight = m_Minigame.FindAction("MinigameDirectionalRight", throwIfNotFound: true);
        m_Minigame_MinigameButtonA = m_Minigame.FindAction("MinigameButtonA", throwIfNotFound: true);
        m_Minigame_MinigameButtonB = m_Minigame.FindAction("MinigameButtonB", throwIfNotFound: true);
        m_Minigame_MinigameButtonX = m_Minigame.FindAction("MinigameButtonX", throwIfNotFound: true);
        m_Minigame_MinigameButtonY = m_Minigame.FindAction("MinigameButtonY", throwIfNotFound: true);
        // Enemy
        m_Enemy = asset.FindActionMap("Enemy", throwIfNotFound: true);
        m_Enemy_Block = m_Enemy.FindAction("Block", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    private readonly InputAction m_Menu_Navigate;
    private readonly InputAction m_Menu_Confirm;
    private readonly InputAction m_Menu_Cancel;
    private readonly InputAction m_Menu_SwapHero;
    public struct MenuActions
    {
        private @BattleControls m_Wrapper;
        public MenuActions(@BattleControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_Menu_Navigate;
        public InputAction @Confirm => m_Wrapper.m_Menu_Confirm;
        public InputAction @Cancel => m_Wrapper.m_Menu_Cancel;
        public InputAction @SwapHero => m_Wrapper.m_Menu_SwapHero;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnNavigate;
                @Confirm.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnConfirm;
                @Confirm.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnConfirm;
                @Confirm.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnConfirm;
                @Cancel.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnCancel;
                @SwapHero.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnSwapHero;
                @SwapHero.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnSwapHero;
                @SwapHero.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnSwapHero;
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @SwapHero.started += instance.OnSwapHero;
                @SwapHero.performed += instance.OnSwapHero;
                @SwapHero.canceled += instance.OnSwapHero;
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);

    // Minigame
    private readonly InputActionMap m_Minigame;
    private IMinigameActions m_MinigameActionsCallbackInterface;
    private readonly InputAction m_Minigame_MinigameDirectionalUp;
    private readonly InputAction m_Minigame_MinigameDirectionalDown;
    private readonly InputAction m_Minigame_MinigameDirectionalLeft;
    private readonly InputAction m_Minigame_MinigameDirectionalRight;
    private readonly InputAction m_Minigame_MinigameButtonA;
    private readonly InputAction m_Minigame_MinigameButtonB;
    private readonly InputAction m_Minigame_MinigameButtonX;
    private readonly InputAction m_Minigame_MinigameButtonY;
    public struct MinigameActions
    {
        private @BattleControls m_Wrapper;
        public MinigameActions(@BattleControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MinigameDirectionalUp => m_Wrapper.m_Minigame_MinigameDirectionalUp;
        public InputAction @MinigameDirectionalDown => m_Wrapper.m_Minigame_MinigameDirectionalDown;
        public InputAction @MinigameDirectionalLeft => m_Wrapper.m_Minigame_MinigameDirectionalLeft;
        public InputAction @MinigameDirectionalRight => m_Wrapper.m_Minigame_MinigameDirectionalRight;
        public InputAction @MinigameButtonA => m_Wrapper.m_Minigame_MinigameButtonA;
        public InputAction @MinigameButtonB => m_Wrapper.m_Minigame_MinigameButtonB;
        public InputAction @MinigameButtonX => m_Wrapper.m_Minigame_MinigameButtonX;
        public InputAction @MinigameButtonY => m_Wrapper.m_Minigame_MinigameButtonY;
        public InputActionMap Get() { return m_Wrapper.m_Minigame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MinigameActions set) { return set.Get(); }
        public void SetCallbacks(IMinigameActions instance)
        {
            if (m_Wrapper.m_MinigameActionsCallbackInterface != null)
            {
                @MinigameDirectionalUp.started -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalUp;
                @MinigameDirectionalUp.performed -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalUp;
                @MinigameDirectionalUp.canceled -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalUp;
                @MinigameDirectionalDown.started -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalDown;
                @MinigameDirectionalDown.performed -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalDown;
                @MinigameDirectionalDown.canceled -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalDown;
                @MinigameDirectionalLeft.started -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalLeft;
                @MinigameDirectionalLeft.performed -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalLeft;
                @MinigameDirectionalLeft.canceled -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalLeft;
                @MinigameDirectionalRight.started -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalRight;
                @MinigameDirectionalRight.performed -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalRight;
                @MinigameDirectionalRight.canceled -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameDirectionalRight;
                @MinigameButtonA.started -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonA;
                @MinigameButtonA.performed -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonA;
                @MinigameButtonA.canceled -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonA;
                @MinigameButtonB.started -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonB;
                @MinigameButtonB.performed -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonB;
                @MinigameButtonB.canceled -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonB;
                @MinigameButtonX.started -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonX;
                @MinigameButtonX.performed -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonX;
                @MinigameButtonX.canceled -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonX;
                @MinigameButtonY.started -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonY;
                @MinigameButtonY.performed -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonY;
                @MinigameButtonY.canceled -= m_Wrapper.m_MinigameActionsCallbackInterface.OnMinigameButtonY;
            }
            m_Wrapper.m_MinigameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MinigameDirectionalUp.started += instance.OnMinigameDirectionalUp;
                @MinigameDirectionalUp.performed += instance.OnMinigameDirectionalUp;
                @MinigameDirectionalUp.canceled += instance.OnMinigameDirectionalUp;
                @MinigameDirectionalDown.started += instance.OnMinigameDirectionalDown;
                @MinigameDirectionalDown.performed += instance.OnMinigameDirectionalDown;
                @MinigameDirectionalDown.canceled += instance.OnMinigameDirectionalDown;
                @MinigameDirectionalLeft.started += instance.OnMinigameDirectionalLeft;
                @MinigameDirectionalLeft.performed += instance.OnMinigameDirectionalLeft;
                @MinigameDirectionalLeft.canceled += instance.OnMinigameDirectionalLeft;
                @MinigameDirectionalRight.started += instance.OnMinigameDirectionalRight;
                @MinigameDirectionalRight.performed += instance.OnMinigameDirectionalRight;
                @MinigameDirectionalRight.canceled += instance.OnMinigameDirectionalRight;
                @MinigameButtonA.started += instance.OnMinigameButtonA;
                @MinigameButtonA.performed += instance.OnMinigameButtonA;
                @MinigameButtonA.canceled += instance.OnMinigameButtonA;
                @MinigameButtonB.started += instance.OnMinigameButtonB;
                @MinigameButtonB.performed += instance.OnMinigameButtonB;
                @MinigameButtonB.canceled += instance.OnMinigameButtonB;
                @MinigameButtonX.started += instance.OnMinigameButtonX;
                @MinigameButtonX.performed += instance.OnMinigameButtonX;
                @MinigameButtonX.canceled += instance.OnMinigameButtonX;
                @MinigameButtonY.started += instance.OnMinigameButtonY;
                @MinigameButtonY.performed += instance.OnMinigameButtonY;
                @MinigameButtonY.canceled += instance.OnMinigameButtonY;
            }
        }
    }
    public MinigameActions @Minigame => new MinigameActions(this);

    // Enemy
    private readonly InputActionMap m_Enemy;
    private IEnemyActions m_EnemyActionsCallbackInterface;
    private readonly InputAction m_Enemy_Block;
    public struct EnemyActions
    {
        private @BattleControls m_Wrapper;
        public EnemyActions(@BattleControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Block => m_Wrapper.m_Enemy_Block;
        public InputActionMap Get() { return m_Wrapper.m_Enemy; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EnemyActions set) { return set.Get(); }
        public void SetCallbacks(IEnemyActions instance)
        {
            if (m_Wrapper.m_EnemyActionsCallbackInterface != null)
            {
                @Block.started -= m_Wrapper.m_EnemyActionsCallbackInterface.OnBlock;
                @Block.performed -= m_Wrapper.m_EnemyActionsCallbackInterface.OnBlock;
                @Block.canceled -= m_Wrapper.m_EnemyActionsCallbackInterface.OnBlock;
            }
            m_Wrapper.m_EnemyActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Block.started += instance.OnBlock;
                @Block.performed += instance.OnBlock;
                @Block.canceled += instance.OnBlock;
            }
        }
    }
    public EnemyActions @Enemy => new EnemyActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_XboxSchemeIndex = -1;
    public InputControlScheme XboxScheme
    {
        get
        {
            if (m_XboxSchemeIndex == -1) m_XboxSchemeIndex = asset.FindControlSchemeIndex("Xbox");
            return asset.controlSchemes[m_XboxSchemeIndex];
        }
    }
    private int m_PlaystationSchemeIndex = -1;
    public InputControlScheme PlaystationScheme
    {
        get
        {
            if (m_PlaystationSchemeIndex == -1) m_PlaystationSchemeIndex = asset.FindControlSchemeIndex("Playstation");
            return asset.controlSchemes[m_PlaystationSchemeIndex];
        }
    }
    public interface IMenuActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnSwapHero(InputAction.CallbackContext context);
    }
    public interface IMinigameActions
    {
        void OnMinigameDirectionalUp(InputAction.CallbackContext context);
        void OnMinigameDirectionalDown(InputAction.CallbackContext context);
        void OnMinigameDirectionalLeft(InputAction.CallbackContext context);
        void OnMinigameDirectionalRight(InputAction.CallbackContext context);
        void OnMinigameButtonA(InputAction.CallbackContext context);
        void OnMinigameButtonB(InputAction.CallbackContext context);
        void OnMinigameButtonX(InputAction.CallbackContext context);
        void OnMinigameButtonY(InputAction.CallbackContext context);
    }
    public interface IEnemyActions
    {
        void OnBlock(InputAction.CallbackContext context);
    }
}
